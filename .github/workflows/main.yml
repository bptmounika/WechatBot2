name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
jobs:
  sonarcloud:
    name: Jfrog github integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check Docker Version
        run: docker --version
#       - name: Login to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./Dockerfile
      - name: Create  artifact dist folder
        run: |
          mkdir dist
          sudo apt update
          sudo apt install tar gzip build-essential
          ls
          cd  dist
#       - name: Code Build
#         run: docker build .
#       - name: upload all aritifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: dist
#           path: ./dist
#       - name: Setup JFrog CLI for integration
#         uses: jfrog/setup-jfrog-cli@v3
#         env:
#           JF_URL: ${{ secrets.INSIGHT_CENTER_FRONTEND_SITE_JFROG_URL }}
#           JF_ACCESS_TOKEN: ${{ secrets.INSIGHT_CENTER_FRONTEND_SITE_JFROG_TOKEN }}
#       - name: validate connectivity with jfrog server
#         run: |
#           jf rt ping
#       - name: validate all input
#         run: |
#           pwd
#           ls 
#           cd dist1
#       - name: download artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: dist
#       - name: validate output
#         run: |
#           pwd
#           ls
#       - name: tar folder
#         uses: nxtlvlsoftware/tar-ops-action@v1
#         with:
#           operation: compress
#           files: dist
#           outPath: ./dist.tgz
#       - name: upload file to artifactory
#         run: |
#           jf rt upload  dist.tgz /insight-center-frontend-site/
